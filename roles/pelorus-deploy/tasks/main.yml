---
# tasks file for pelorus-deploy
- python_requirements_info:
        dependencies:
          - openshift
          - requests

- name: Deployment of Pelorus core stack on OCP
  block:
  - name: Log in (obtain access token)
    k8s_auth:
      username: "{{ username }}"
      password: "{{ password }}"
    register: k8s_auth_results

  - name: Create {{ pelorus_project_name }} namespace
    k8s:
      api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
      name: "{{ pelorus_project_name }}"
      api_version: v1
      kind: Namespace
      state: present

  - name: Create lab admin user
    k8s:
      api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
      state: present
      definition: "{{ lookup('file', '{{ role_path }}/files/htpass-secret.yml') }}"

  - name: Configure cluster oauth
    k8s:
      api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
      state: present
      definition: "{{ lookup('file', '{{ role_path }}/files/oauth-cluster.yml') }}"

  - name: Create cluster role binding
    k8s:
      api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
      state: present
      definition: "{{ lookup('file', '{{ role_path }}/files/cluster-role-binding-lab-admin.yml') }}"

  - name: Install operators of Pelorus using Helm
    ansible.builtin.shell: helm install operators /tmp/checkout/charts/operators --namespace {{pelorus_project_name}}

  - name: Install Pelorus using Helm
    ansible.builtin.shell: helm install pelorus /tmp/checkout/charts/pelorus --namespace {{pelorus_project_name}}


  always:
  - name: If login succeeded, try to log out (revoke access token)
    when: k8s_auth_results.k8s_auth.api_key is defined
    k8s_auth:
      state: absent
      api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"

